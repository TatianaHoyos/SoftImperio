name: Desplegar a ECR contenedor de c#

on:

  pull_request:
    branches:
      - main

jobs:
  
  build:
    
    name: Build Image
    runs-on: ubuntu-latest

   
    steps:

    - name: Check out code
      uses: actions/checkout@v2
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-2

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2
      with:
        registry: public.ecr.aws/u8j8i3w5

      - name: Build Docker image
        run: docker build -t imperio-public-registry -f Backend/venta/Dockerfile Backend/venta/  # Build image

      - name: Tag Docker image (avoid ':latest' for production)
        run: docker tag imperio-public-registry:<IMAGE_TAG> public.ecr.aws/u8j8i3w5/imperio-public-registry:<IMAGE_TAG>
        env:
          IMAGE_TAG: ${{ github.sha }}  # Use commit SHA for tag (avoid ':latest')

      - name: Push Docker image to ECR
        run: docker push public.ecr.aws/u8j8i3w5/imperio-public-registry:<IMAGE_TAG>
        env:
          IMAGE_TAG: ${{ github.sha }}
#    - name: Build, tag, and push image to Amazon ECR
#      env:
#        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
#        ECR_REPOSITORY: ${{ secrets.AWS_ECR_REPO }}
#        IMAGE_TAG: latest
#      run: |
#        docker build --progress=plain -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -f Backend/venta/Dockerfile Backend/venta/
#        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG