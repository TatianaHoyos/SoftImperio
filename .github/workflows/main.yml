name: Desplegar a ECR contenedor de c#

on:

  pull_request:
    branches:
      - main

permissions:
  id-token: write
  contents: read

jobs:
  
  build:
    
    name: Build Image
    runs-on: ubuntu-latest

   
    steps:

    - name: Check out code
      uses: actions/checkout@v3
    
    - name: Configure AWS credentials
      uses: aws-actions/amazon-ecr-login@v2
      with:
        role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
        aws-region: us-east-2
        registry-type: public
        #aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        #aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        

    #- name: Login to Amazon ECR
    #  id: login-ecr
    #  uses: aws-actions/amazon-ecr-login@v2

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1.6.2

    - name: Build Docker image
      run: docker build -t public.ecr.aws/u8j8i3w5/imperio-public-registry:latest -f Backend/venta/Dockerfile Backend/venta/  # Build image

    - name: Tag Docker image
      env:
        IMAGE_TAG: ${{ github.sha }}
      run: docker tag public.ecr.aws/u8j8i3w5/imperio-public-registry:latest public.ecr.aws/u8j8i3w5/imperio-public-registry:latest

    - name: Push Docker image to ECR
      env:
        IMAGE_TAG: ${{ github.sha }}
      run: docker push public.ecr.aws/u8j8i3w5/imperio-public-registry:latest
      
#    - name: Build, tag, and push image to Amazon ECR
#      env:
#        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
#        ECR_REPOSITORY: ${{ secrets.AWS_ECR_REPO }}
#        IMAGE_TAG: latest
#      run: |
#        docker build --progress=plain -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -f Backend/venta/Dockerfile Backend/venta/
#        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG