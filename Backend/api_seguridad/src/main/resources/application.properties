
spring.datasource.driver-class-name=${SPRING_DATASOURCE_DRIVER_CLASS_NAME}
spring.datasource.url=${SPRING_DATASOURCE_URL}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD}

#spring.datasource.password=2002
#spring.datasource.password=Sena1234
#spring.datasource.password=12345

#crea las tablas si no existen
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
spring.jpa.show-sql=true
spring.jpa.defer-datasource-initialization=true
spring.sql.init.mode=always
spring.datasource.initialization-mode=always
logging.level.org.springframework.jdbc.datasource.init=DEBUG



spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

logging.level.web= TRACE
# swagger-ui custom path
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.default-support-form-data=true
#las sgtes 5 lineas son para habilitar el envio de cabeceras de seguridad como authorization en swagger
springdoc.swagger-ui.oauth.useBasicAuthentication=true
components.securitySchemes.auth.type=apiKey
components.securitySchemes.auth.in=header
components.securitySchemes.auth.name=Authorization
security={auth=[]}
# http://localhost:8080/swagger-ui/index.html -> documentación del API

#salt para cifrado
security.crypto.salt=eq#jQ_@o)l^0MDvE

#propiedades para el jwt
jwt.secret=tatiSecret123456
#jwt.expiration.seconds=1200
#jwt.refresh.expiration.seconds=2400
jwt.expiration.seconds=60
jwt.refresh.expiration.seconds=600

# Configuraci�n para la autenticaci�n del cliente
security.clientId=562ed6c2-86f8-4846-96b7-1dc1faf73fb6
security.clientSecret=ACiMy4L8gp/enQziGYb82rHrjHXtD0a+hLFazm5tpcY=

